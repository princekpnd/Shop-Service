spring.application.name=shop
server.port=8092
eureka.server.port=8761
# the hostname
eureka.instance.hostname=localhost
# Eureka server time to sync with other peers, 
# usually it's 3 min and it will retry if it doesnt
# get any response but for developpement we will put it to 0
eureka.numberRegistrySyncRetries=0
#############################################
# EUREKA CLIENT CONFIGURATION#
#############################################
# the Eureka server has the same host as ours 
# so we do this to stop the server from registring as it's own peer
eureka.client.service-url.default-zone=http://${eureka.instance.hostname}:${eureka.server.port}/eureka/
# To stop it from trying to register to an Eureka Server
#eureka.client.register-with-eureka=true
# To stop fetching registry information about other services from other peers
#eureka.client.fetch-registry=false
#spring.datasource.driver-class-name=com.mysql.jdbc.Driver
#database-1.cjobaywitdal.ap-south-1.rds.amazonaws.com
spring.datasource.url=jdbc:mysql://database-1.cjobaywitdal.ap-south-1.rds.amazonaws.com:3306/shop?useUnicode=yes&characterEncoding=UTF-8&characterSetResults=UTF-8&useSSL=false
spring.datasource.username=admin
spring.datasource.password=Vishal#1235#
spring.datasource.tomcat.max-wait=20000
spring.datasource.tomcat.max-active=50
spring.datasource.tomcat.max-idle=20
spring.datasource.tomcat.min-idle=15

spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQLDialect
spring.jpa.properties.hibernate.id.new_generator_mappings = false
spring.jpa.properties.hibernate.format_sql = true
spring.jpa.properties.hibernate.connection.CharSet=utf-8
spring.jpa.properties.hibernate.connection.useUnicode=true
spring.jpa.properties.hibernate.connection.characterEncoding=utf-8
logging.level.org.hibernate.SQL=DEBUG
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=TRACE


###spring security
jwt.secret=javainuse
jwt.get.token.uri=/authenticate

#FileUpload
spring.servlet.multipart.max-file-size=25024KB
spring.servlet.multipart.max-request-size=25024KB
spring.http.multipart.enabled=false
userBucket.linux.path=/var/www/html/avatar/
userBucket.linux.path.timeline=/var/www/html/timeline/
userBucket.linux.path.product=/var/www/html/product/
userBucket.linux.path.adhar=/var/www/html/adhar/
userBucket.linux.path.pancard=/var/www/html/pancard/
userBucket.linux.path.shop=/var/www/html/shop/
userBucket.macos.path=/var/www/html/avatar/
userBucket.window.path=C:/tmp/
userBucket.window.path.timeline=C:/tmp/timeline/
userBucket.window.path.product=C:/tmp/product/
userBucket.window.path.adhar=C:/tmp/adhar/
userBucket.window.path.pancard=C:/tmp/pancard/
userBucket.window.path.shop=C:/tmp/shop/

spring.jpa.properties.hibernate.search.default.directory_provider = filesystem

# Using the filesystem DirectoryProvider you also have to specify the default
# base directory for all indexes (make sure that the application have write
# permissions on such directory)
spring.jpa.properties.hibernate.search.default.indexBase = /tmp/index